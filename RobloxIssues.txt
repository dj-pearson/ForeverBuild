# ForeverBuild Roblox Issues Tracking Document
Last updated: May 10, 2025 (Iteration 4 - Final)

This document lists all identified issues in our Roblox project, categorized by priority. 
Each issue has a tracking ID, status, and assigned priority level.

## Issue Status Legend
- [ ] = Not started
- [P] = In progress
- [X] = Completed
- [D] = Deferred

## Priority Levels
- P0: Critical (Game-breaking issues that prevent the game from running)
- P1: High (Significant issues that impact core functionality)
- P2: Medium (Issues that affect gameplay but have workarounds)
- P3: Low (Minor issues, quality of life improvements)

---

## P0: Critical Issues

### ðŸ”„ Path Structure and Module Access Issues

- [P] **P0-001**: Structure mismatch between `shared` folder and `ReplicatedStorage.Shared`
  - Updated error: "shared is not a valid member of ReplicatedStorage" 
  - Affects both server and client scripts
  - Now occurring in both ServerScriptService and PlayerScripts modules

- [P] **P0-002**: Server module access issues
  - Updated error: "server is not a valid member of ServerScriptService"
  - File: ServerScriptService.Modules.Tutorial.TutorialHandler:6
  - Also occurring in ServerScriptService.init.Modules.Tutorial.TutorialHandler:6

- [ ] **P0-003**: Modules folder not accessible
  - "Modules is not a valid member of ServerScriptService"
  - File: ServerScriptService.server:14

- [P] **P0-004**: Missing Remotes folder in ReplicatedStorage
  - Multiple "Infinite yield possible on 'ReplicatedStorage.Remotes:WaitForChild'" errors
  - Found in specific modules: ReportUI, AdminReport, AdminCommandHandler

### ðŸ”„ DataStore and Module Resolution Issues

- [P] **P0-005**: Core DataStoreManager module not found
  - "Module not found: DataStoreManager"
  - File moved to src/server directory but still experiencing issues in DataStoreManagerPro plugin
  - Affects DataStoreManagerPro plugin functionality

---

## P1: High Priority Issues

### ðŸ”„ Player Module Access Issues

- [P] **P1-001**: Module resolution in client scripts
  - Updated error: "ReportUI is not a valid member of ServerScriptService" 
  - File: Players.Xdjpearsonx.PlayerScripts.Modules.Admin.ReportContextMenu:8
  - Suggests improper require paths between client scripts

### ðŸ”„ Invalid Require Calls

- [P] **P1-002**: Invalid require calls in scripts
  - "Attempted to call require with invalid argument(s)" now appearing throughout the project
  - Occurring in nearly all UI scripts in PlayerGui.Gui
  - Also occurs in PlayerScripts.init.Modules and PlayerScripts.Modules

- [ ] **P1-003**: Module load errors cascading to other scripts
  - "Requested module experienced an error while loading"
  - Files: TutorialManager:6, client:5

### ðŸ”„ Missing Module Errors

- [P] **P1-004**: Module structure and references issues  
  - "shared is not a valid member of ReplicatedStorage" in server scripts
  - "ModuleManager is not a valid member of Folder 'ReplicatedStorage.Shared'" in client scripts
  - "RemoteManager is not a valid member of Folder 'ReplicatedStorage.Shared'" in ServerScriptService.init
  - This confirms that module structure is the core issue across the project

- [X] **P1-005**: AchievementManager missing variable definitions
  - Fixed by properly defining required variables
  - Removing unused imports and implementing necessary caching

---

## P2: Medium Priority Issues

### ðŸ”„ Module Structure and References

- [P] **P2-004**: Missing Modules in ReplicatedStorage.Shared
  - Project appears to expect these modules in Shared:
    - ModuleManager (used in Gui:4)
    - RemoteManager (used in ServerScriptService.init:25)
    - Constants (previously referenced in UI scripts)
  - Suggests a need for consistent module implementation in ReplicatedStorage
  
- [X] **P2-005**: BuildingChallengeManager code structure issues
  - Fixed duplicate if blocks by refactoring with a `shouldAward` variable
  - Fixed empty if block implementation
  - Properly prefixed unused parameters with underscore
  - Commented out unused imports

### ðŸ”„ DataStoreManagerPro Issues

- [ ] **P2-006**: Missing modules in DataStoreManagerPro plugin
  - Multiple "Failed to resolve module" errors
  - Modules affected: CacheManager, SchemaManager, SchemaValidator, SessionManager, etc.

- [ ] **P2-007**: UI Component access errors in DataStoreManagerPro
  - Multiple "X is not a valid member of Folder/Script" errors
  - Components: APIIntegration, AccessControl, SchemaManager, StyleGuide, etc.

- [ ] **P2-008**: Invalid callback in DataExplorer
  - "Attempt to connect failed: Passed value is not a function"
  - File: DataStoreManagerPro.src.server.DataExplorer:472

---

## P3: Low Priority Issues

### ðŸ”„ DataStore Client Access Issues

- [ ] **P3-001**: Client attempting to access DataStore
  - "DataStore can't be accessed from client"
  - File: DataStoreManagerPro.src.server.SessionManager:27

### ðŸ”„ Init Script Issues

- [ ] **P3-002**: Missing init.server script
  - "init.server is not a valid member of Script"
  - File: DataStoreManagerPro.src

### ðŸ”„ Nil Value Calls

- [ ] **P3-003**: Attempting to call nil values
  - "attempt to call a nil value"
  - File: DataStoreManagerPro.src.server.DataExplorer:549

### ðŸ”„ ModuleManager Dependencies

- [ ] **P3-004**: Missing ModuleManager reference
  - "ModuleManager is not a valid member of ModuleScript 'ReplicatedStorage.Shared'"
  - File: Players.Xdjpearsonx.PlayerGui.Gui:4

---

## Completion Tracking

**Total Issues**: 19
- P0 Critical: 5
- P1 High: 5
- P2 Medium: 8
- P3 Low: 4

**Progress**:
- Completed: 2/19 (11%)
- In Progress: 6/19 (32%)
- Not Started: 11/19 (57%)
- Deferred: 0/19 (0%)

---

## Notes and Guidelines

### Key Problem Categories:
1. Path structure and module resolution issues (In progress)
   - Both server and client scripts are failing to find modules
   - The errors show that neither "shared" nor "server" modules can be accessed
   - Project has multiple module reference patterns that aren't working together

2. Missing core modules in ReplicatedStorage.Shared (In progress)
   - ModuleManager, RemoteManager, and Constants all appear to be expected in Shared

3. Multiple instance paths for the same scripts
   - Scripts exist in both `ServerScriptService.Modules` and `ServerScriptService.init.Modules`
   - Scripts exist in both `PlayerScripts.Modules` and `PlayerScripts.init.Modules`
   - This suggests a project structure mismatch or duplication

4. DataStoreManagerPro integration issues (Less urgent for now)

### Resolved Issues:
1. âœ… AchievementManager.luau missing variable definitions
2. âœ… BuildingChallengeManager.luau code structure issues 

### In Progress:
1. ðŸ”„ Module path structure and references (P0-001, P0-002, P1-001, P1-002, P1-004, P2-004)
2. ðŸ”„ Remotes folder creation and configuration (P0-004)

### Root Cause Analysis:
The errors suggest that there's a fundamental mismatch between:
1. How modules are organized in the file system
2. How Roblox expects to find them in the game hierarchy 
3. How scripts are trying to require them

I've examined the workspace structure and found:
- We have both `src/ReplicatedStorage/Shared` and direct modules in `src/ReplicatedStorage`
- Required modules exist but in different locations than scripts are looking for them
- There are duplicate paths with both `ServerScriptService.Modules` and `ServerScriptService.init.Modules`
- Many modules might be referencing paths like `ReplicatedStorage.Shared.Constants` but the actual file is directly in ReplicatedStorage

### Recommended Solution Approach:

1. Fix module structure in ReplicatedStorage (Begin Here):
   - Move `ReplicatedStorage/RemoteManager.luau` and other direct modules into `ReplicatedStorage/Shared/`
   - Ensure `SharedModuleResolver.luau` properly exposes all shared modules
   - Create a proper folder structure that matches the requires in the scripts:
     ```
     ReplicatedStorage/
       Shared/              <- Main shared modules folder
         Constants.luau     <- Constants module (referenced in many UI scripts)
         ModuleManager.luau <- Module manager (referenced in Gui:4)
         RemoteManager.luau <- Remote manager (from existing file)
         Types.luau         <- Types module
     ```

2. Create and configure the Remotes folder:
   - Add this to ServerScriptService.init.server.lua:
     ```lua
     -- Create Remotes folder and required RemoteEvents
     local Remotes = Instance.new("Folder")
     Remotes.Name = "Remotes"
     Remotes.Parent = game:GetService("ReplicatedStorage")
     
     -- Create admin command event
     local AdminCommand = Instance.new("RemoteEvent")
     AdminCommand.Name = "AdminCommand" 
     AdminCommand.Parent = Remotes
     
     -- Create report object event
     local ReportObject = Instance.new("RemoteEvent")
     ReportObject.Name = "ReportObject"
     ReportObject.Parent = Remotes
     ```

### Review this document after fixing each category of issues and update status accordingly.